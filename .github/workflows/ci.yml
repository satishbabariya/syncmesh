name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go-version: [ 1.21.x, 1.22.x ]

    steps:
    - uses: actions/checkout@v4

    - name: Set up Go ${{ matrix.go-version }}
      uses: actions/setup-go@v4
      with:
        go-version: ${{ matrix.go-version }}

    - name: Cache Go modules
      uses: actions/cache@v3
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: Download dependencies
      run: go mod download

    - name: Run tests
      run: go test -v ./...

    - name: Run tests with coverage
      run: go test -race -coverprofile=coverage.out -covermode=atomic ./...

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.out

  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: 1.21.x

    - name: golangci-lint
      uses: golangci/golangci-lint-action@v3
      with:
        version: latest

  build:
    runs-on: ubuntu-latest
    needs: [test, lint]
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: 1.21.x

    - name: Build
      run: go build -v ./...

    - name: Build binary
      run: make build

  docker:
    runs-on: ubuntu-latest
    needs: [test, lint]
    steps:
    - uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: false
        tags: syncmesh:latest

  integration:
    runs-on: ubuntu-latest
    needs: [build, docker]
    steps:
    - uses: actions/checkout@v4

    - name: Start cluster
      run: docker-compose up -d

    - name: Wait for services
      run: sleep 30

    - name: Test health endpoints
      run: |
        curl -f http://localhost:8080/api/v1/health || exit 1
        curl -f http://localhost:8180/api/v1/health || exit 1
        curl -f http://localhost:8280/api/v1/health || exit 1

    - name: Test API endpoints
      run: |
        curl -f http://localhost:8080/api/v1/cluster/status || exit 1
        curl -f http://localhost:8080/api/v1/sync/status || exit 1

    - name: Run stress test
      run: timeout 60s ./scripts/stress-test.sh || true

    - name: Collect logs
      if: failure()
      run: docker-compose logs

    - name: Stop cluster
      run: docker-compose down