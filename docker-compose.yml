version: '3.8'

services:
  # Node 1 - Bootstrap node
  syncmesh-node1:
    build: .
    hostname: syncmesh-node1
    container_name: syncmesh-node1
    ports:
      - "8080:8080"
      - "8081:8081"
      - "8082:8082"
      - "9090:9090"
    environment:
      - SYNCMESH_NODE_ID=node-1
      - SYNCMESH_LOG_LEVEL=info
      - SYNCMESH_CLUSTER_BOOTSTRAP=true
      - SYNCMESH_CLUSTER_BIND_ADDR=0.0.0.0:8082
      - SYNCMESH_CLUSTER_ADVERTISE_ADDR=syncmesh-node1:8082
    volumes:
      - node1_data:/app/data
      - node1_sync:/sync-data
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - syncmesh-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/api/v1/health"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 30s

  # Node 2 - Follower node
  syncmesh-node2:
    build: .
    hostname: syncmesh-node2
    container_name: syncmesh-node2
    ports:
      - "8180:8080"
      - "8181:8081"
      - "8182:8082"
      - "9190:9090"
    environment:
      - SYNCMESH_NODE_ID=node-2
      - SYNCMESH_LOG_LEVEL=info
      - SYNCMESH_CLUSTER_BOOTSTRAP=false
      - SYNCMESH_CLUSTER_BIND_ADDR=0.0.0.0:8082
      - SYNCMESH_CLUSTER_ADVERTISE_ADDR=syncmesh-node2:8082
      - SYNCMESH_CLUSTER_JOIN_ADDRESSES=syncmesh-node1:8082
    volumes:
      - node2_data:/app/data
      - node2_sync:/sync-data
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - syncmesh-network
    depends_on:
      - syncmesh-node1
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/api/v1/health"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 45s

  # Node 3 - Follower node
  syncmesh-node3:
    build: .
    hostname: syncmesh-node3
    container_name: syncmesh-node3
    ports:
      - "8280:8080"
      - "8281:8081"
      - "8282:8082"
      - "9290:9090"
    environment:
      - SYNCMESH_NODE_ID=node-3
      - SYNCMESH_LOG_LEVEL=info
      - SYNCMESH_CLUSTER_BOOTSTRAP=false
      - SYNCMESH_CLUSTER_BIND_ADDR=0.0.0.0:8082
      - SYNCMESH_CLUSTER_ADVERTISE_ADDR=syncmesh-node3:8082
      - SYNCMESH_CLUSTER_JOIN_ADDRESSES=syncmesh-node1:8082
    volumes:
      - node3_data:/app/data
      - node3_sync:/sync-data
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - syncmesh-network
    depends_on:
      - syncmesh-node1
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/api/v1/health"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 45s

  # Prometheus for monitoring
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9091:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    networks:
      - syncmesh-network

  # Grafana for visualization
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources
    networks:
      - syncmesh-network
    depends_on:
      - prometheus

  # Test application that creates files
  file-generator:
    image: alpine:latest
    container_name: file-generator
    volumes:
      - node1_sync:/sync-data
    command: |
      sh -c "
        while true; do
          echo 'Generated at $(date)' > /sync-data/test-file-$(date +%s).txt
          sleep 60
        done
      "
    networks:
      - syncmesh-network
    depends_on:
      - syncmesh-node1

networks:
  syncmesh-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.30.0.0/16

volumes:
  node1_data:
  node2_data:
  node3_data:
  node1_sync:
  node2_sync:
  node3_sync:
  prometheus_data:
  grafana_data: